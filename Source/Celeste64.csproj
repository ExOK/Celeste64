<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <OutputType>Library</OutputType>
        <TargetFramework>net8.0</TargetFramework>
        <ImplicitUsings>enable</ImplicitUsings>
        <Nullable>enable</Nullable>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
        <Version>1.1.1</Version>
        <PublishSingleFile>true</PublishSingleFile>
        <PublishTrimmed>false</PublishTrimmed>
        <ApplicationIcon>..\fuji.ico</ApplicationIcon>
        <PackageIcon>..\fuji.png</PackageIcon>
        <PackageReadmeFile>..\ReadMe.md</PackageReadmeFile>
        <SelfContained>false</SelfContained>
        <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="FosterFramework" Version="0.1.18-alpha"/>
        <PackageReference Include="SharpGLTF.Runtime" Version="1.0.0-alpha0031"/>
        <PackageReference Include="Sledge.Formats.Map" Version="1.1.5"/>

        <PackageReference Include="MonoMod.RuntimeDetour" Version="25.1.0-prerelease.2"/>
        <PackageReference Include="ImGui.NET" Version="1.90.1.1"/>

        <ProjectReference Include="..\Celeste64.HookGen\Celeste64.HookGen.csproj" OutputItemType="Analyzer">
          <Private>false</Private>
        </ProjectReference>
    </ItemGroup>

    <PropertyGroup Condition="($(RuntimeIdentifier) == '' and $([MSBuild]::IsOSPlatform('Linux'))) or $(RuntimeIdentifier.StartsWith('linux'))">
        <IsLinux>true</IsLinux>
    </PropertyGroup>

    <PropertyGroup Condition="($(RuntimeIdentifier) == '' and $([MSBuild]::IsOSPlatform('Windows'))) or $(RuntimeIdentifier.StartsWith('win'))">
        <IsWindows>true</IsWindows>
    </PropertyGroup>

    <PropertyGroup Condition="($(RuntimeIdentifier) == '' and $([MSBuild]::IsOSPlatform('OSX'))) or $(RuntimeIdentifier.StartsWith('osx'))">
        <IsMacOS>true</IsMacOS>
    </PropertyGroup>
    
    <PropertyGroup Condition="($(RuntimeIdentifier) == '' and $([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture) == 'x64') or $(RuntimeIdentifier.EndsWith('x64'))">
        <PlatformTarget>x64</PlatformTarget>
    </PropertyGroup>

    <PropertyGroup Condition="($(RuntimeIdentifier) == '' and $([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture) == 'Arm64') or $(RuntimeIdentifier.EndsWith('arm64'))">
        <IsArm64>true</IsArm64>
        <PlatformTarget>ARM64</PlatformTarget>
    </PropertyGroup>

    <PropertyGroup Condition="($(RuntimeIdentifier) == '' and $([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture) == 'Arm') or $(RuntimeIdentifier.EndsWith('arm'))">
        <IsArm>true</IsArm>
        <PlatformTarget>ARM</PlatformTarget>
    </PropertyGroup>

    <ItemGroup Condition="$(IsLinux) == 'true' and $(IsArm64) == 'true'">
        <Content Include="Audio/FMOD/libs/libarm64/**" CopyToOutputDirectory="PreserveNewest" Link="%(Filename)%(Extension)"/>
    </ItemGroup>

    <ItemGroup Condition="$(IsLinux) == 'true' and $(IsArm) == 'true'">
        <Content Include="Audio/FMOD/libs/libarm/**" CopyToOutputDirectory="PreserveNewest" Link="%(Filename)%(Extension)"/>
    </ItemGroup>

    <ItemGroup Condition="$(IsLinux) == 'true' and $(IsArm64) != 'true' and $(IsArm) != 'true'">
        <Content Include="Audio/FMOD/libs/lib64/**" CopyToOutputDirectory="PreserveNewest" Link="%(Filename)%(Extension)"/>
    </ItemGroup>

    <ItemGroup Condition="$(IsWindows) == 'true'">
        <Content Include="Audio/FMOD/libs/x64/**" CopyToOutputDirectory="PreserveNewest" Link="%(Filename)%(Extension)"/>
    </ItemGroup>

    <ItemGroup Condition="$(IsMacOS) == 'true'">
        <Content Include="Audio/FMOD/libs/osx/**" CopyToOutputDirectory="PreserveNewest" Link="%(Filename)%(Extension)"/>
    </ItemGroup>

    <ItemGroup>
        <None Update="..\fuji.png">
            <Pack>True</Pack>
            <PackagePath>\</PackagePath>
        </None>
        <None Update="..\ReadMe.md">
            <Pack>True</Pack>
            <PackagePath>\</PackagePath>
        </None>
    </ItemGroup>
</Project>
